#==============================================================================#
#
# Opus
#
#==============================================================================#

#VERSION="v2018082800"			# libopus ist noch experimentell
#VERSION="v2019092100"			# libopus ist nicht mehr experimentell, kann jetzt auch 5.1 + 7.1
#VERSION="v2019101400"			# ich hatte die Hoffnung, das jetzt mehr als Stereo geht
#VERSION="v2020092400"			# libopus kann jetzt Mehrkanalton (mit mapping_family), meine Mehrkanalton-Tests waren aber stumm
#VERSION="v2020092500"			# weitere Variable eingeführt
#VERSION="v2023032500"			# jetzt wird "opus" verwendet, wenn "libopus" nicht vorhanden ist
#VERSION="v2023032500"                  # neue Ermittlungsmethode für Encoder
#VERSION="v2023042400"			# schreibt jetzt in die richtige Protokolldatei
#VERSION="v2023061000"			# jetzt wird für jeden Audio-Kanal separat die Bit-Rate berechnet
VERSION="v2023081200"			# -filter:a: repariert

#------------------------------------------------------------------------------#
#
# Der native Opus-Encoder ist noch im experimentellen Stadium (2019).
# Der externe Opus-Encoder ist nicht mehr im experimentellen Stadium (2019).
#
#------------------------------------------------------------------------------#

### https://trac.ffmpeg.org/wiki/Encode/HighQualityAudio
#
#   Seit 2017 verfügt FFmpeg über einen eigenen, nativen Opus-Encoder
#   und -Decoder.
#   Die Mobil-Plattform Android unterstützt ab Version 5 (Lollipop)
#   Opus eingebettet in das Matroska-Containerformat nativ.

#------------------------------------------------------------------------------#

CODEC_PATTERN="opus"			# Beispiel: "h265|hevc"

AUDIOCODEC="$(suche_audio_encoder "libopus")"
if [ "x${AUDIOCODEC}" = "x" ] ; then
	AUDIOCODEC="$(suche_audio_encoder "${CODEC_PATTERN}")"
	if [ "x${AUDIOCODEC}" = "x" ] ; then
		AUDIOCODEC="$(echo "${FFMPEG_LIB}" | grep -E "${CODEC_PATTERN}" | head -n1)"
		if [ "x${AUDIOCODEC}" = "x" ] ; then
			AUDIOCODEC="$(echo "${FFMPEG_FORMATS}" | grep -E "${CODEC_PATTERN}" | head -n1)"
			if [ "x${AUDIOCODEC}" = "x" ] ; then
				echo ""
				echo "CODEC_PATTERN='${CODEC_PATTERN}'"
				echo "AUDIOCODEC='${AUDIOCODEC}'"
				echo "Leider wird dieser Codec von der aktuell installierten Version"
				echo "von FFmpeg nicht unterstützt!"
				echo ""
#				exit 1

				AUDIOCODEC="opus"
			fi
		fi
	fi
fi

#------------------------------------------------------------------------------#
# https://ffmpeg.org/pipermail/ffmpeg-devel/2016-June/195178.html
#
# Example usage:
#
# > wget https://samples.ffmpeg.org/A-codecs/wavpcm/8_Channel_ID.wav -O in.wav
#
# Use the old behavior. Header contains layout, but no masking
# > ./ffmpeg -y -i in.wav -c:a opus -mapping_family -1 out.ogg
#
# Use libopus surround mode. Masking + automatic channel coupling
# > ./ffmpeg -y -i in.wav -c:a opus -mapping_family 1 out.ogg
#
# Use libopus with independent channels. No header info, no masking,
# no coupling
# > ./ffmpeg -y -i in.wav -c:a opus -mapping_family 255 out.ogg
#
# This patch also makes it possible to encode up to 254 channels with opus
# using channel mapping family 255.
#
#------------------------------------------------------------------------------#

#------------------------------------------------------------------------------#
### leider ist "opus" noch experimentel und kann nur Stereo

if [ "${AUDIOCODEC}" = "opus" ] ; then
	# diese Option wird mit dem Codec zusammen, nur einmal für alle Kanäle zusammen,
	# angegeben und nicht für jeden Kanal extra
	AUDIO_OPTION_GLOBAL="-strict -2 -ac 2"		# opus
else
	# diese Option wird mit dem Codec zusammen, nur einmal für alle Kanäle zusammen,
	# angegeben und nicht für jeden Kanal extra
	AUDIO_OPTION_GLOBAL="-compression_level 10"	# libopus
fi

#------------------------------------------------------------------------------#
#AUDIOCODEC="libopus"

echo "# 1001
TS_ANZAHL=${TS_ANZAHL}
AUDIO_OPTION_GLOBAL='${AUDIO_OPTION_GLOBAL}'
" | tee -a "${ZIELVERZ}"/${PROTOKOLLDATEI}.txt

#exit 1001

#==============================================================================#

### libopus
## -vbr 0 (Use constant bit rate)
## -vbr 1 (Use variable bit rate)
## -vbr 2 (Use constrained VBR)
## Mehrkanalton kann libopus aber nur mit mapping_family (-1, 1, 255)

F_AUDIO_QUALITAET()
{
	AUDIO_BIT_kBIT_PRO_KANAL="
	24
	32
	40
	48
	56
	64
	64
	64
	64
	64
	"

	if [ "${AUDIOCODEC}" = "libopus" ] ; then
		AUDIO_BIT_RATE="$(echo "${AUDIO_KANAELE} $(echo "${AUDIO_BIT_kBIT_PRO_KANAL}" | grep -Ev '#|^[ \t]*$' | head -n${AUDIO_VON_OBEN} | tail -n1) 64 2" | awk '{print $1 * $2}')k"
		if [ "${AUDIO_KANAELE}" -gt 2 ] ; then
        		echo "-b:a:${1} ${AUDIO_BIT_RATE} -vbr:a:${1} on -mapping_family:a:${1} 1 -filter:a:${1} aformat=channel_layouts='7.1|6.1|5.1|5.0|quad|3.0'"
		else
        		echo "-b:a:${1} ${AUDIO_BIT_RATE} -vbr:a:${1} on -mapping_family:a:${1} 0 -filter:a:${1} aformat=channel_layouts='stereo|mono'"
		fi
	else
		AUDIO_BIT_RATE="$(echo "2 $(echo "${AUDIO_BIT_kBIT_PRO_KANAL}" | grep -Ev '#|^[ \t]*$' | head -n${AUDIO_VON_OBEN} | tail -n1) 64 2" | awk '{print $1 * $2}')k"
        	echo "-b:a:${1} ${AUDIO_BIT_RATE} "
	fi
}

