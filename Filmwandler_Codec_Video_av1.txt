#==============================================================================#
#
# AV1
#
# https://trac.ffmpeg.org/wiki/Encode/AV1
#
#==============================================================================#
#
# https://ffmpeg.org/ffmpeg-codecs.html
#   ffmpeg -h encoder=av1
#   ffmpeg -h encoder=libaom-av1
#   ffmpeg -h encoder=libsvtav1
#
#==============================================================================#

#VERSION="v2018082800"			# erste Unterstützung von AV1 eingebaut
#VERSION="v2020060200"			# erweitert um Beispiele
#VERSION="v2020060300"			# VIDEO_OPTION definiert, Anpassungen für FFmpeg 4.2.2
#VERSION="v2020092300"			# der Kodec "libaom-av1" ist nicht mehr experimentell
#VERSION="v2020112800"			# limitierte Kodeksuche eingebaut, bei der nur nach bestimmten Kodeks gesucht wird
#VERSION="v2020121700"			# Qualitätsabstufung von AOM angepasst
#VERSION="v2023032100"			# Optionen für "libaom-av1" so geändert, dass die Dateien etwas größer werden aber deutlich schneller encodet werden
#VERSION="v2023032400"			# Fehler in der Zuordnung von Parameter zu Codec behoben
#VERSION="v2023032500"			# neuen Namen für den SVT-AV1-Coder aufgenommen: libsvtav1
#VERSION="v2023032501"			# neue Ermittlungsmethode für Encoder
#VERSION="v2023050500"			# SVT-AV1 an die neuen Optionen (seit 0.9.1) angepasst
#VERSION="v2023050900"			# Abstufung so angepasst, dass bei "-vq 5" die Codecs x264, x265, aom-av1 und svt-av1 eine änlich lange Transkodierzeit benötigen (pro Minute Spielfilm, ca. 1,5 Minuten Transkodierdauer)
#VERSION="v2023051100"			# Die Abstufung von librav1e besser abgestimmt
#VERSION="v2023051300"			# da libaom-av1 und av1 identisch sind, wurde die Funktion "intern_av1" entfernt
#VERSION="v2023061000"			# jetzt werden Codecs konsequent in encoders gesucht
#VERSION="v2023061400"			# enable-tf=0 für eine verbesserte Schärfe
#VERSION="v2023061800"			# -crf ${CRF} -preset ${PRESET} -svtav1-params:v:0 enable-overlays=1:enable-tf=0:film-grain=0:film-grain-denoise=0:keyint=5s:scd=1:tune=0:fast-decode=0
#VERSION="v2024022400"			# av1_nvenc - muß aber noch konfiguriert werden
#VERSION="v2024041500"			# Abstufungen für svtav1 komplett überarbeitet
#VERSION="v2024041600"			# Fehler in der CRF-Berechnung von AV1 behoben
#VERSION="v2024041700"			# Abstufungen für svtav1 etwas angepasst
#VERSION="v2024041800"			# 2-Pass für AOM hinzugefügt
VERSION="v2024042000"			# Verbesserung in der CRF-Berechnung vorgenommen

TWO_PASS="Nein"				# 2-Pass deaktiviert, es ist hier nicht vorgesehen
CODEC_PATTERN="av1|aom"			# Beispiel: "h265|hevc"

#==============================================================================#
### vollautomatische Kodeksuche wurde in diesem Fall abgeschaltet,
### bei der auch nach bisher unbekannten Kodeks gesucht wird

#VIDEOCODEC="$(suche_video_encoder "libaom")"
VIDEOCODEC="$(suche_video_encoder "svtav1")"
if [ "x${VIDEOCODEC}" = "x" ] ; then
	VIDEOCODEC="$(suche_video_encoder "${CODEC_PATTERN}")"
	if [ "x${VIDEOCODEC}" = "x" ] ; then
		VIDEOCODEC="$(echo "${FFMPEG_LIB}" | grep -Fv libdav1d | grep -E "${CODEC_PATTERN}" | head -n1)"
		if [ "x${VIDEOCODEC}" = "x" ] ; then
			VIDEOCODEC="$(echo "${FFMPEG_FORMATS}" | grep -E "${CODEC_PATTERN}" | head -n1)"
			if [ "x${VIDEOCODEC}" = "x" ] ; then
				echo ""
				echo "CODEC_PATTERN='${CODEC_PATTERN}'"
				echo "VIDEOCODEC='${VIDEOCODEC}'"
				echo "Leider wird dieser Codec von der aktuell installierten Version"
				echo "von FFmpeg nicht unterstützt!"
				echo ""
#				exit 1

				VIDEOCODEC="av1"
			fi
		fi
	fi
fi

echo "# AV1 01
# VIDEOCODEC='${VIDEOCODEC}'
"

#==============================================================================#

#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
# HDR_FARBRAUM="-colorspace bt2020nc -color_trc smpte2084 -color_primaries bt2020"	# diese verwendet YouTube
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#

#VIDEOCODEC="av1"		# AOM-AV1 erzwingen / ist der langsamste und bietet die beste Qualität
#VIDEOCODEC="libsvtav1"		# SVT-AV1 erzwingen / ist der schnellste und bietet ausreichende Qualität
#VIDEOCODEC="librav1e"		# Rav1E erzwingen (Version < 1) / hat leider Version 1 noch nicht erreicht / ist mittelmäßig schnell bietet aber schnellerer Einstellung, bessere Qualität als AOM-AV1

################################################################################
if [ libaom-av1 = "${VIDEOCODEC}" -o av1 = "${VIDEOCODEC}" ] ; then
	echo "# libaom_av1"

	# die Option '-pass' gesetzt wurde + ein anderer als der Std-Codec gewünscht ist, dann greift dieser Code
	if [ Ja = "${TWOPASS}" ] ; then
		TWO_PASS="Ja"			# 2-Pass aktivieren
		VIDEO_OPTION_PASS_1="-crf 38 ${CONSTANT_QUALITY}"
	fi

	#------------------------------------------------------------------------------#
	### kurz gesagt:
	# - Qualität und Dateigröße ist von "-crf" abhängig;
	# - Transkodier-Geschwindigkeit und Dateigröße ist von "-cpu-used" abhängig;
	#------------------------------------------------------------------------------#
	### https://streaminglearningcenter.com/blogs/good-news-av1-encoding-times-drop-to-near-reasonable-levels.html
	### -cpu-used 0-8	- bei "8": höchste Verarbeitsungsgeschwindigkeit
	#------------------------------------------------------------------------------#

	VIDEO_OPTION="-cpu-used 8 -row-mt 1 -aq-mode 1 -tune 1 -threads ${CPU_KERNE}"	# -aom-params fp-mt=1 geht mit 2-Pass nicht
	VIDEO_QUALITAET_0="-crf 58 ${VIDEO_OPTION}"
	VIDEO_QUALITAET_1="-crf 54 ${VIDEO_OPTION}"
	VIDEO_QUALITAET_2="-crf 50 ${VIDEO_OPTION}"
	VIDEO_QUALITAET_3="-crf 46 ${VIDEO_OPTION}"
	VIDEO_QUALITAET_4="-crf 42 ${VIDEO_OPTION}"
	VIDEO_QUALITAET_5="-crf 38 ${VIDEO_OPTION}"
	VIDEO_QUALITAET_6="-crf 34 ${VIDEO_OPTION}"
	VIDEO_QUALITAET_7="-crf 30 ${VIDEO_OPTION}"
	VIDEO_QUALITAET_8="-crf 26 ${VIDEO_OPTION}"
	VIDEO_QUALITAET_9="-crf 22 ${VIDEO_OPTION}"
elif [ libsvtav1 = "${VIDEOCODEC}" ] ; then
	echo "# libsvtav1"

	#------------------------------------------------------------------------------#
	# https://trac.ffmpeg.org/wiki/Encode/AV1#SVT-AV1
	# ffmpeg -v error -h encoder=libsvtav1
	#------------------------------------------------------------------------------#
	#
	# https://gitlab.com/AOMediaCodec/SVT-AV1/-/blob/master/Docs/CommonQuestions.md#what-presets-do
	#  -preset 10 -crf 35	: Für eine schnelle Codierung muss das "preset" ausreichend hoch sein, damit Ihre CPU ohne Stottern codieren kann. Höhere Voreinstellungen sind schneller, aber weniger effizient.
	#  -preset 5 -crf 32	: Für einen Medienserver oder HTPC, sind eine höhere Effizienz und vernünftige Codierzeiten wünschenswert.
	#  -preset 2 -crf 25	: Für professionelle VOD-Anwendungen wird oft die bestmögliche Effizienz gewünscht.
	#
	#------------------------------------------------------------------------------#
	# Voreinstellung: -crf 35 -preset 10 -svtav1-params tune=1:fast-decode=1
	#
	# Ähnlich wie CRF in x264 und x265 versucht diese Rate-Control-Methode (CRF) sicherzustellen, dass jeder Frame die Anzahl an Bits erhält, die er verdient, um ein bestimmtes (wahrnehmungsbezogenes) Qualitätsniveau zu erreichen.
	# CRF           : 0...63	# kleinere Werte ergeben eine bessere Qualität und deutlich größere Dateien
	#
	# Der Kompromiss zwischen Kodierungsgeschwindigkeit und Komprimierungseffizienz wird mit der Option -preset verwaltet.
	# preset        : 0...12	# kleinere Werte ergeben eine etwas kleinere Dateie und eine deutlich langsamere Kodierungsgeschwindigkeit
	#
	#------------------------------------------------------------------------------#
	# CLI-Test:
	# > for BILD_HOCH in $(seq 1 36 | awk '{print $1*120}'); do echo -e "9 1\n$(seq 0 44 | nl | awk '{printf "%.0f %.0f\n", $1+18,120*((36^(1/44))^$2)}')" | awk -v b="${BILD_HOCH}" '{if ($2 >= b) crf=$1 ; if ($2 < b) crf="#" ; print crf,b" | "$1,$2}' | grep -Ev '^#' | head -n1; done
	#------------------------------------------------------------------------------#

	#KORREKTUR="9"	# Fokus auf Qualität
	KORREKTUR="3"	# Fokus auf Dateigröße
	CRF="$(echo -e "9 1\n$(seq 0 44 | nl | awk '{printf "%.0f %.0f\n", $1+18,120*((36^(1/44))^$2)}')" | awk -v b="${BILD_HOCH}" -v q="${BILDQUALIT}" '{if ($2 >= b) crf=$1-q ; if ($2 < b) crf="#" ; print crf}' | grep -Ev '^#' | head -n1 | awk -v k="${KORREKTUR}" '{crf=$1; if ((10+k) >= $1) crf=(10+k) ; if ((60+k) <= $1) crf=(60+k) ; print crf-k}')"
	echo "# -crf ${CRF}"
	# https://gitlab.com/AOMediaCodec/SVT-AV1/-/blob/master/Docs/Parameters.md
	VIDEO_OPTION="-svtav1-params enable-overlays=1:enable-tf=0:film-grain=0:film-grain-denoise=0:keyint=5s:scd=1:tune=0:fast-decode=0:lp=${CPU_KERNE}"

	# Fokus auf Qualität
	VIDEO_QUALITAET_0="-crf ${CRF} -preset 9 ${VIDEO_OPTION}"		# größte Datei, schnellstes, schlechteste Qualität
	VIDEO_QUALITAET_1="-crf ${CRF} -preset 8 ${VIDEO_OPTION}"		# 
	VIDEO_QUALITAET_2="-crf ${CRF} -preset 7 ${VIDEO_OPTION}"		# 
	VIDEO_QUALITAET_3="-crf ${CRF} -preset 6 ${VIDEO_OPTION}"		# 
	VIDEO_QUALITAET_4="-crf ${CRF} -preset 5 ${VIDEO_OPTION}"		# 
	VIDEO_QUALITAET_5="-crf ${CRF} -preset 4 ${VIDEO_OPTION}"		# "-vq 5 ist" Standard
	VIDEO_QUALITAET_6="-crf ${CRF} -preset 3 ${VIDEO_OPTION}"		# 
	VIDEO_QUALITAET_7="-crf ${CRF} -preset 2 ${VIDEO_OPTION}"		# 
	VIDEO_QUALITAET_8="-crf ${CRF} -preset 1 ${VIDEO_OPTION}"		# 
	VIDEO_QUALITAET_9="-crf ${CRF} -preset 0 ${VIDEO_OPTION}"		# kleinste Datei, langsamstes, beste Qualität

	# Fokus auf Kodierungsgeschwindigkeit
	#VIDEO_QUALITAET_0="-crf ${CRF} -preset 10 ${VIDEO_OPTION}"		# größte Datei, schnellstes, schlechteste Qualität
	#VIDEO_QUALITAET_1="-crf ${CRF} -preset 9 ${VIDEO_OPTION}"		# 
	#VIDEO_QUALITAET_2="-crf ${CRF} -preset 8 ${VIDEO_OPTION}"		# 
	#VIDEO_QUALITAET_3="-crf ${CRF} -preset 7 ${VIDEO_OPTION}"		# 
	#VIDEO_QUALITAET_4="-crf ${CRF} -preset 6 ${VIDEO_OPTION}"		# 
	#VIDEO_QUALITAET_5="-crf ${CRF} -preset 5 ${VIDEO_OPTION}"		# "-vq 5 ist" Standard
	#VIDEO_QUALITAET_6="-crf ${CRF} -preset 4 ${VIDEO_OPTION}"		# 
	#VIDEO_QUALITAET_7="-crf ${CRF} -preset 3 ${VIDEO_OPTION}"		# 
	#VIDEO_QUALITAET_8="-crf ${CRF} -preset 2 ${VIDEO_OPTION}"		# 
	#VIDEO_QUALITAET_9="-crf ${CRF} -preset 1 ${VIDEO_OPTION}"		# kleinste Datei, langsamstes, beste Qualität
elif [ librav1e = "${VIDEOCODEC}" ] ; then
	echo "# librav1e"

	#   ffmpeg -h encoder=librav1e
	#
	# https://ffmpeg.org/ffmpeg-codecs.html
	#  -c:v librav1e
	#  -qp            "-1 bis 255"    (default 100; kleinerer Wert steht für bessere Qualität)
	#  -speed         "-1 bis 10"     (default -1) / wie "preset" bei libsvtav1
	#  -tiles         "-1 to I64_MAX" (default 0)  / wie "threads" zu betrachten
	#  -tile-rows     "-1 to I64_MAX" (default 0)
	#  -tile-columns  "-1 to I64_MAX" (default 0)
	#  -rav1e-params
	#    :speed=5     "0 bis 10"
	#    :low_latency=true
	#    :tune=psnr                                / Dateigröße: mit psnr 2,8MB; ohne psnr 3MB
	#
	#------------------------------------------------------------------------------#

	VIDEO_OPTION="-qp 80 -tiles ${CPU_KERNE}"
	VIDEO_QUALITAET_0="${VIDEO_OPTION} -rav1e-params speed=10:low_latency=false"	# speed=0-10
	VIDEO_QUALITAET_1="${VIDEO_OPTION} -rav1e-params speed=9:low_latency=false"	# speed=0-10
	VIDEO_QUALITAET_2="${VIDEO_OPTION} -rav1e-params speed=8:low_latency=false"	# speed=0-10
	VIDEO_QUALITAET_3="${VIDEO_OPTION} -rav1e-params speed=7:low_latency=false"	# speed=0-10
	VIDEO_QUALITAET_4="${VIDEO_OPTION} -rav1e-params speed=6:low_latency=false"	# speed=0-10
	VIDEO_QUALITAET_5="${VIDEO_OPTION} -rav1e-params speed=5:low_latency=false"	# speed=0-10
	VIDEO_QUALITAET_6="${VIDEO_OPTION} -rav1e-params speed=4:low_latency=false"	# speed=0-10
	VIDEO_QUALITAET_7="${VIDEO_OPTION} -rav1e-params speed=3:low_latency=false"	# speed=0-10
	VIDEO_QUALITAET_8="${VIDEO_OPTION} -rav1e-params speed=2:low_latency=false"	# speed=0-10
	VIDEO_QUALITAET_9="${VIDEO_OPTION} -rav1e-params speed=1:low_latency=false"	# speed=0-10
elif [ av1_nvenc = "${VIDEOCODEC}" ] ; then
	echo "# av1_nvenc"

	VIDEO_OPTION=""
	VIDEO_QUALITAET_0="-qp 15 ${VIDEO_OPTION}"		# von "-1" bis "255"
	VIDEO_QUALITAET_1="-qp 30 ${VIDEO_OPTION}"		# von "-1" bis "255"
	VIDEO_QUALITAET_2="-qp 45 ${VIDEO_OPTION}"		# von "-1" bis "255"
	VIDEO_QUALITAET_3="-qp 50 ${VIDEO_OPTION}"		# von "-1" bis "255"
	VIDEO_QUALITAET_4="-qp 65 ${VIDEO_OPTION}"		# von "-1" bis "255"
	VIDEO_QUALITAET_5="-qp 80 ${VIDEO_OPTION}"		# von "-1" bis "255"
	VIDEO_QUALITAET_6="-qp 95 ${VIDEO_OPTION}"		# von "-1" bis "255"
	VIDEO_QUALITAET_7="-qp 110 ${VIDEO_OPTION}"		# von "-1" bis "255"
	VIDEO_QUALITAET_8="-qp 125 ${VIDEO_OPTION}"		# von "-1" bis "255"
	VIDEO_QUALITAET_9="-qp 140 ${VIDEO_OPTION}"		# von "-1" bis "255"
fi
################################################################################

echo "# AV1 02
# VIDEOCODEC='${VIDEOCODEC}'
# VIDEO_OPTION='${VIDEO_OPTION}'
"

#------------------------------------------------------------------------------#

