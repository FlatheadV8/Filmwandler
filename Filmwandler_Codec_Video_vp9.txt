#==============================================================================#
#
# VP9
#
#==============================================================================#

#VERSION="v2018090600"
#VERSION="v2019101400"
#VERSION="v2020060300"
#VERSION="v2023032500"			# neue Ermittlungsmethode für Encoder
#VERSION="v2023051400"			# Voreinstellungen angepasst
#VERSION="v2023061000"			# jetzt werden Codecs konsequent in encoders gesucht
#VERSION="v2023061800"			# -cpu-used sets how efficient the compression will be. For legacy reasons, the option is also accessible with -speed in ffmpeg.
#VERSION="v2024031700"			# CRF ist jetzt in Abhängigkeit von der Bildhöhe
#VERSION="v2024041500"			# Abstufungen überarbeitet, jetzt funktioniert auch -vq wieder und sehr kleine sowie sehr große Auflösungen bekommen jetzt einen gültigen CRF-Wert
VERSION="v2024041700"			# 2-Pass erzwungen, weil einige qualitätssteigernde Encoderfunktionen nur im 2-Pass-Modus verfügbar sind

# die Option '-pass' gesetzt wurde + ein anderer als der Std-Codec gewünscht ist, dann greift dieser Code
if [ Ja = "${TWOPASS}" ] ; then
	TWO_PASS="Ja"			# 2-Pass aktivieren, einige qualitätssteigernde Encoderfunktionen nur im 2-Pass-Modus verfügbar sind
fi

CODEC_PATTERN="vp9"			# Beispiel: "h265|hevc"

echo "# VP9
CODEC_PATTERN='${CODEC_PATTERN}'
TWO_PASS='${TWO_PASS}'
" | tee "${ZIELVERZ}"/${PROTOKOLLDATEI}.txt

#------------------------------------------------------------------------------#
#  https://trac.ffmpeg.org/wiki/Encode/AV1#SVT-AV1
#  ffmpeg -h encoder=libvpx-vp9
#  ffmpeg -h encoder=libsvt_vp9
#  ffmpeg -h encoder=vp9
#------------------------------------------------------------------------------#

### konstante Qualität
# https://trac.ffmpeg.org/wiki/Encode/VP9#variableb -> Constant Quality
# To trigger this mode, you must use a combination of "-crf" and "-b:v 0".
# "-b:v" MUST be 0!
#
# https://developers.google.com/media/vp9/settings/vod/
# Der Wert für "CRF" ist abhängig von der Bildhöhe:
#        240 Pixel:   -crf 37
#        360 Pixel:   -crf 36
#        480 Pixel:   -crf 33
#        720 Pixel:   -crf 32
#       1080 Pixel:   -crf 31
#       1440 Pixel:   -crf 24
#       2160 Pixel:   -crf 15
#               empfohlen: 15-35

#------------------------------------------------------------------------------#
# vp9_metadata_bsf AVOptions:
#   -color_space       <int>        ...V....B.. Set colour space (section 7.2.2) (from -1 to 7) (default -1)
#      unknown         0            ...V....B.. Unknown/unspecified
#      bt601           1            ...V....B.. ITU-R BT.601-7
#      bt709           2            ...V....B.. ITU-R BT.709-6
#      smpte170        3            ...V....B.. SMPTE-170
#      smpte240        4            ...V....B.. SMPTE-240
#      bt2020          5            ...V....B.. ITU-R BT.2020-2
#      rgb             7            ...V....B.. sRGB / IEC 61966-2-1
#   -color_range       <int>        ...V....B.. Set colour range (section 7.2.2) (from -1 to 1) (default -1)
#      tv              0            ...V....B.. TV (limited) range
#      pc              1            ...V....B.. PC (full) range
#------------------------------------------------------------------------------#

VIDEOCODEC="$(suche_video_encoder "${CODEC_PATTERN}")"
if [ "x${VIDEOCODEC}" = "x" ] ; then
	VIDEOCODEC="$(echo "${FFMPEG_LIB}" | grep -E "${CODEC_PATTERN}" | head -n1)"
	if [ "x${VIDEOCODEC}" = "x" ] ; then
		VIDEOCODEC="$(echo "${FFMPEG_FORMATS}" | grep -E "${CODEC_PATTERN}" | head -n1)"
		if [ "x${VIDEOCODEC}" = "x" ] ; then
			echo ""
			echo "CODEC_PATTERN='${CODEC_PATTERN}'"
			echo "VIDEOCODEC='${VIDEOCODEC}'"
			echo "Leider wird dieser Codec von der aktuell installierten Version"
			echo "von FFmpeg nicht unterstützt!"
			echo ""
#			exit 1

			VIDEOCODEC="vp9"		# im FFmpeg interner Codec
		fi
	fi
fi


# bei "-b:v 0" ergibt eine "konstante Qualität" => bestes Ergebnis, wenn die Dateigröße egal ist
# bei "-b:v 2000k" ergibt eine "begrente Qualität" => konstante Qualität mit einer Bit-Raten-Obergrenze

### https://trac.ffmpeg.org/wiki/Encode/VP9
### -deadline can be set to realtime, good, or best. For legacy reasons, the option is also accessible with -quality in ffmpeg.
# -deadline good     - is the default and recommended for most applications.
# -deadline best     - is recommended if you have lots of time and want the best compression efficiency.
# -deadline realtime - is recommended for live / fast encoding.

### legacy: https://trac.ffmpeg.org/wiki/Encode/VP9
### -cpu-used sets how efficient the compression will be. For legacy reasons, the option is also accessible with -speed in ffmpeg.
### -deadline can be set to realtime, good, or best. For legacy reasons, the option is also accessible with -quality in ffmpeg.

#------------------------------------------------------------------------------#
### https://developers.google.com/media/vp9/settings/vod?hl=de
### CRF = 39,75-(Bildhöhe / 87,273)
#   400 -> CFR 35
#   480 -> CFR 34
#   540 -> CFR 34
#   576 -> CFR 33
#   600 -> CFR 33
#   800 -> CFR 31
#   950 -> CFR 29
#   1080 -> CFR 27
#   1600 -> CFR 21
#   2160 -> CFR 15

KORREKTURWERT="5"

if [ 400 -gt "${BILD_HOCH}" ] ; then
	CRF="$(echo "400 ${BILDQUALIT} ${KORREKTURWERT}" | awk '{printf "%.0f\n", ((39750/1000)-($1 / (87273/1000)))+$2-$3}')"
elif [ 2200 -lt "${BILD_HOCH}" ] ; then
	CRF="$(echo "2200 ${BILDQUALIT} ${KORREKTURWERT}" | awk '{printf "%.0f\n", ((39750/1000)-($1 / (87273/1000)))+$2-$3}')"
else
	CRF="$(echo "${BILD_HOCH} ${BILDQUALIT} ${KORREKTURWERT}" | awk '{printf "%.0f\n", ((39750/1000)-($1 / (87273/1000)))+$2-$3}')"
fi

#------------------------------------------------------------------------------#

CONSTANT_QUALITY="-b:v 0"	# Um den Modus "Konstante Qualität" auszulösen, müssen Sie eine Kombination aus -crf und -b:v 0 verwenden. Beachten Sie, dass -b:v 0 sein MUSS. Wenn Sie den Wert auf einen höheren Wert festlegen oder ganz weglassen, wird stattdessen der Modus „Eingeschränkte Qualität“ aufgerufen.
VIDEO_OPTION_PASS_1="-crf ${CRF} ${CONSTANT_QUALITY}"
VIDEO_OPTION="${CONSTANT_QUALITY} -aq-mode 1 -row-mt 1"
VIDEO_QUALITAET_0="-crf ${CRF} -sharpness 1 ${VIDEO_OPTION}"		# -crf 15-35 - recommended values range
VIDEO_QUALITAET_1="-crf ${CRF} -sharpness 0 ${VIDEO_OPTION}"		# -crf 15-35 - recommended values range
VIDEO_QUALITAET_2="-crf ${CRF} -sharpness 0 ${VIDEO_OPTION}"		# -crf 15-35 - recommended values range
VIDEO_QUALITAET_3="-crf ${CRF} -sharpness 0 ${VIDEO_OPTION}"		# -crf 15-35 - recommended values range
VIDEO_QUALITAET_4="-crf ${CRF} -sharpness 0 ${VIDEO_OPTION}"		# -crf 15-35 - recommended values range
VIDEO_QUALITAET_5="-crf ${CRF} -sharpness 0 ${VIDEO_OPTION}"		# -crf 15-35 - recommended values range
VIDEO_QUALITAET_6="-crf ${CRF} -sharpness 0 ${VIDEO_OPTION}"		# -crf 15-35 - recommended values range
VIDEO_QUALITAET_7="-crf ${CRF} -sharpness 0 ${VIDEO_OPTION}"		# -crf 15-35 - recommended values range
VIDEO_QUALITAET_8="-crf ${CRF} -sharpness 0 ${VIDEO_OPTION}"		# -crf 15-35 - recommended values range
VIDEO_QUALITAET_9="-crf ${CRF} -sharpness 0 ${VIDEO_OPTION}"		# -crf 15-35 - recommended values range

echo "# VP9
CRF='${CRF}'
VIDEO_OPTION='${VIDEO_OPTION}'
TWO_PASS='${TWO_PASS}'
" | tee "${ZIELVERZ}"/${PROTOKOLLDATEI}.txt

