#==============================================================================#
#
# VP9
#
#==============================================================================#

#VERSION="v2018090600"
#VERSION="v2019101400"
#VERSION="v2020060300"
#VERSION="v2023032500"			# neue Ermittlungsmethode für Encoder
VERSION="v2023051400"			# Voreinstellungen angepasst

TWO_PASS="Nein"				# 2-Pass encoding
CODEC_PATTERN="vp9"			# Beispiel: "h265|hevc"
#VIDEOCODEC="$(suche_video_encoder "${CODEC_PATTERN}")"

#------------------------------------------------------------------------------#
#  https://trac.ffmpeg.org/wiki/Encode/AV1#SVT-AV1
#  ffmpeg -h encoder=libvpx-vp9
#  ffmpeg -h encoder=libsvt_vp9
#  ffmpeg -h encoder=vp9
#------------------------------------------------------------------------------#

### konstante Qualität
# https://trac.ffmpeg.org/wiki/Encode/VP9#variableb -> Constant Quality
# To trigger this mode, you must use a combination of "-crf" and "-b:v 0".
# "-b:v" MUST be 0!
#
# https://developers.google.com/media/vp9/settings/vod/
# Der Wert für "CRF" ist abhängig von der Bildhöhe:
#        240 Pixel:   -crf 37
#        360 Pixel:   -crf 36
#        480 Pixel:   -crf 33
#        720 Pixel:   -crf 32
#       1080 Pixel:   -crf 31
#       1440 Pixel:   -crf 24
#       2160 Pixel:   -crf 15
#               empfohlen: 15-35

#------------------------------------------------------------------------------#

#VIDEOCODEC="$(echo "${FFMPEG_LIB}" | grep -E "${CODEC_PATTERN}" | head -n1)"
#if [ "x${VIDEOCODEC}" = "x" ] ; then
#	VIDEOCODEC="$(echo "${FFMPEG_FORMATS}" | grep -E "${CODEC_PATTERN}" | head -n1)"
#	if [ "x${VIDEOCODEC}" = "x" ] ; then
#		echo ""
#		echo "CODEC_PATTERN='${CODEC_PATTERN}'"
#		echo "VIDEOCODEC='${VIDEOCODEC}'"
#		echo "Leider wird dieser Codec von der aktuell installierten Version"
#		echo "von FFmpeg nicht unterstützt!"
#		echo ""
#		exit 1
#	fi
#fi

### dieser Codec wird leider mit "-formats" nicht ausgegeben
### deshalb muss er fest eingetragen werden
#   encoders: libsvt_vp9 libvpx-vp9
VIDEOCODEC="libvpx-vp9"		# z.Z. (Okt. 2019) funktioniert libvpx-vp9 am besten
#VIDEOCODEC="libsvt-vp9"  	# SVT-Version
#VIDEOCODEC="vp9"		# im FFmpeg interner Codec


# bei "-b:v 0" ergibt eine "konstante Qualität" => bestes Ergebnis, wenn die Dateigröße egal ist
# bei "-b:v 2000k" ergibt eine "begrente Qualität" => konstante Qualität mit einer Bit-Raten-Obergrenze

CONSTANT_QUALITY="-b:v 0"	# Um den Modus "Konstante Qualität" auszulösen, müssen Sie eine Kombination aus -crf und -b:v 0 verwenden. Beachten Sie, dass -b:v 0 sein MUSS. Wenn Sie den Wert auf einen höheren Wert festlegen oder ganz weglassen, wird stattdessen der Modus „Eingeschränkte Qualität“ aufgerufen.
VIDEO_OPTION="-crf 32 ${CONSTANT_QUALITY} -tune ssim -aq-mode 1 -row-mt 1 -speed 4"
VIDEO_QUALITAET_0="-cpu-used 0 -sharpness 1 ${VIDEO_OPTION}"		# -cpu-used von "0" bis "8"
VIDEO_QUALITAET_1="-cpu-used 0 -sharpness 0 ${VIDEO_OPTION}"		# -cpu-used von "0" bis "8"
VIDEO_QUALITAET_2="-cpu-used 1 -sharpness 0 ${VIDEO_OPTION}"		# -cpu-used von "0" bis "8"
VIDEO_QUALITAET_3="-cpu-used 2 -sharpness 0 ${VIDEO_OPTION}"		# -cpu-used von "0" bis "8"
VIDEO_QUALITAET_4="-cpu-used 3 -sharpness 0 ${VIDEO_OPTION}"		# -cpu-used von "0" bis "8"
VIDEO_QUALITAET_5="-cpu-used 4 -sharpness 0 ${VIDEO_OPTION}"		# -cpu-used von "0" bis "8"
VIDEO_QUALITAET_6="-cpu-used 5 -sharpness 0 ${VIDEO_OPTION}"		# -cpu-used von "0" bis "8"
VIDEO_QUALITAET_7="-cpu-used 6 -sharpness 0 ${VIDEO_OPTION}"		# -cpu-used von "0" bis "8"
VIDEO_QUALITAET_8="-cpu-used 7 -sharpness 0 ${VIDEO_OPTION}"		# -cpu-used von "0" bis "8"
VIDEO_QUALITAET_9="-cpu-used 8 -sharpness 0 ${VIDEO_OPTION}"		# -cpu-used von "0" bis "8"

